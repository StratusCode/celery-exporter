---
# yamllint disable rule:line-length
version: '3'

vars:
  PYTHON_VERSION: '3.11'
  GOOGLE_PROJECT_ID: "stunning-base-208718"

includes:
  git:
    taskfile: .taskfiles/git.yml
  docker:
    taskfile: .taskfiles/docker.yml
    vars:
      DOCKER_IMAGE_PREFIX: '{{.GOOGLE_PROJECT_ID}}/'
      DOCKER_IMAGE_NAME: celery-exporter
      DOCKER_BUILD_ARGS: >-
        {{.DOCKER_BUILD_ARGS}}
        PYTHON_VERSION="{{.PYTHON_VERSION}}"

tasks:
  build-image:
    desc: Builds a docker image
    cmds:
      - docker build . -t danihodovic/celery-exporter

  build-binary:
    desc: Creates a binary
    cmds:
      - docker build . -t celery-exporter-builder -f Dockerfile.pyinstaller --build-arg PYTHON_VERSION=$(cat .python-version)
      - >
        container=$(docker run --rm -d celery-exporter-builder sleep 5) &&
        docker cp $container:/app/dist/celery-exporter celery-exporter

  release:
    desc: Creates a Github release
    deps: [build-binary]
    cmds:
      - git tag --delete latest
      - git tag -a latest -m 'Latest build'
      - >
        github-release delete
        --user danihodovic
        --repo celery-exporter
        --tag latest
      - >
        github-release release
        --user danihodovic
        --repo celery-exporter
        --tag latest
        --name celery-exporter
        --description "Celery exporter for Prometheus"
      - >
        github-release upload
        --user danihodovic
        --repo celery-exporter
        --tag latest
        --name celery-exporter
        --file ./celery-exporter
  package:
    desc: Build and package the Docker image.
    run: once
    cmds:
      - task: docker:build
  publish:
    desc: Publish the image to the Docker registry.
    run: once
    deps:
      - task: package
    preconditions:
      - sh: '[ "{{.GIT_TREE_STATE}}" = "clean" ]'
        msg: "git working directory is not clean"
    cmds:
      - task: docker:push
